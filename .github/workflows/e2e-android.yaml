name: E2E Android

on:
  pull_request:
    branches:
      - master
      - develop

concurrency:
  group: build-${{ github.event.pull_request.number || github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  test:
    name: E2E Android
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Setup git
        run: |
          git fetch origin $GITHUB_BASE_REF
      - name: Create env file
        run: |
          touch apps/habit-app/.env
          echo GRAPHQL_URL=${{ secrets.ENV_GRAPHQL_URL }} >> .env
          echo AUTHENTICATION_CLIENT_ID=${{ secrets.ENV_AUTHENTICATION_CLIENT_ID }} >> .env
          echo AUTHENTICATION_DOMAIN=${{ secrets.ENV_AUTHENTICATION_DOMAIN }} >> .env
          cat .env
      - uses: actions/setup-node@v2
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install app node modules
        run: |
          npx nx ensure-symlink
      - name: Clean gradle
        run: |
          cd apps/habit-app/android
          ./gradlew clean
          ./gradlew tasks --stacktrace
      - name: Build Android app
        run: |
          npm run e2e-build-android -- --configuration=production --base=origin/$GITHUB_BASE_REF --skip-nx-cache
        env:
          RN_SRC_EXT: e2e.ts
      - name: Rebuild Android app if failed
        if: failure()
        run: |
          npm run e2e-build-android -- --configuration=production --base=origin/$GITHUB_BASE_REF --skip-nx-cache
        env:
          RN_SRC_EXT: e2e.ts
      - name: Download Android emulator
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-30;google_apis;x86"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name Pixel_4a_API_30 --device "pixel" -k 'system-images;android-30;google_apis;x86'
          $ANDROID_HOME/emulator/emulator -list-avds
      - name: Boot Android emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd Pixel_4a_API_30 -no-audio -no-snapshot -no-window &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
      - name: Test Android app
        run: |
          npm run e2e-test-android -- --configuration=production --base=origin/$GITHUB_BASE_REF
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: failing-tests-videos
          path: artifacts/
